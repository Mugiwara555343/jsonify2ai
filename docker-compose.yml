services:
  web:
    build: ./web
    container_name: ${COMPOSE_PROJECT_NAME:-jsonify2ai-main}-web-1
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8082
    depends_on:
      - api
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:5173 || curl -fsSI http://localhost:5173"]
      interval: 20s
      timeout: 5s
      retries: 10

  api:
    build: ./api
    container_name: ${COMPOSE_PROJECT_NAME:-jsonify2ai-main}-api-1
    ports:
      - "${PORT_API:-8082}:8082"
    volumes:
      - ./data:/app/data
    env_file:
      - ./.env
    environment:
      - PORT_API=${PORT_API:-8082}
      - DOCS_DIR=/app/data/documents
      - GIN_MODE=${GIN_MODE:-release}
      - GIN_TRUSTED_PROXIES=${GIN_TRUSTED_PROXIES:-}
    restart: unless-stopped
    depends_on:
      - worker
      - qdrant
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8082/health/full || curl -fsS http://localhost:8082/health/full"]
      interval: 15s
      timeout: 5s
      retries: 10

  worker:
    build: ./worker
    image: jsonify2ai-worker:latest
    ports: ["8090:8090"]
    volumes:
      - ./data:/app/data
      - ./scripts:/app/scripts
      - ./worker:/app/worker           # ← NEW: mount ingest scripts
    env_file:
      - ./.env
    environment:
      QDRANT_URL: "http://host.docker.internal:6333"
      OLLAMA_URL: "http://host.docker.internal:11434"
      EMBED_DEV_MODE: "0"
      IMAGES_CAPTION: ${IMAGES_CAPTION:-0}
      ASK_MODE: ${ASK_MODE}
      ASK_MODEL: ${ASK_MODEL}
      PYTHONPATH: /app            # ← NEW: allow imports like `from app...`
    restart: unless-stopped
    depends_on:
      - qdrant
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8090/status || curl -fsS http://localhost:8090/status"]
      interval: 15s
      timeout: 5s
      retries: 10

  qdrant:
    image: qdrant/qdrant:latest
    container_name: ${COMPOSE_PROJECT_NAME:-jsonify2ai-main}-qdrant-1
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:6333/readyz || curl -fsS http://localhost:6333/readyz"]
      interval: 20s
      timeout: 5s
      retries: 15

  watcher:
    image: python:3.11-slim
    command: ["bash","-lc","pip install --no-cache-dir requests && python scripts/filewatcher.py"]
    working_dir: /app
    volumes:
      - ./:/app
    environment:
      - WATCH_DIR=data/dropzone
      - WORKER_BASE=http://worker:8090
      - WATCH_INTERVAL_SEC=2.0
      - WATCH_STRIP_PREFIX=/app/
      - WATCH_REQUIRE_PREFIX=data/dropzone/
    depends_on:
      - worker
    restart: unless-stopped
    profiles: ["watcher"]

volumes:
  qdrant_data:

networks:
  default:
    driver: bridge
